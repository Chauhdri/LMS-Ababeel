{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ababeel\\\\LMS FrontEnd\\\\src\\\\pages\\\\components\\\\countDown.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\",];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dayNamesCom = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]; // const monthNamesFull = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\nconst date = Date.now();\nexport let dateFormat = date => {\n  date = new Date(date);\n  return `${date.getDate()}-${monthNames[date.getMonth(date)]}`;\n};\n\nfunction day(value) {\n  return Math.floor((Date.parse(value) - date) / 86.4e+6);\n} // 86.4e+6 are milliseconds for 1 day. and returns upcoming date as object..\n\n\nfunction CountDown(props) {\n  _s();\n\n  const diff = props.value - +new Date();\n\n  let value = () => {\n    if (diff > 0) return [String(Math.floor(diff / (1000 * 60 * 60) % 24)).padStart(2, '0'), String(Math.floor(diff / 1000 / 60 % 60)).padStart(2, '0'), String(Math.floor(diff / 1000 % 60)).padStart(2, '0')];\n  };\n\n  const [count, setCount] = React.useState(value());\n  React.useEffect(() => {\n    setTimeout(() => {\n      setCount(value());\n    }, 1000);\n  });\n  return `${count[0]}:${count[1]}:${count[2]} `;\n}\n\n_s(CountDown, \"1RkvNNhVTKbDVvtPA5ILx4n20P4=\");\n\n_c = CountDown;\nexport function nextLectureDate(targetArray, condition) {\n  let nextDate = condition === \"Assignments\" ? targetArray.find(a => {\n    return Date.parse(a[\"Last Date\"]) > date;\n  }) : targetArray.find(a => {\n    return Date.parse(a.Date + ' ' + a.Time) > date;\n  });\n  nextDate = nextDate === undefined ? \"-\" : condition === \"Assignments\" ? nextDate[\"Last Date\"] : nextDate.Date + ' ' + nextDate.Time;\n\n  const days = nextDate => {\n    return /*#__PURE__*/_jsxDEV(\"i\", {\n      children: [day(nextDate) === 0 ? /*#__PURE__*/_jsxDEV(CountDown, {\n        value: new Date(nextDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 42\n      }, this) : day(nextDate) <= 7 ? dayNamesCom[new Date(nextDate).getDay()] : day(nextDate) <= 31 ? `${new Date(nextDate).getDate()}-${monthNames[new Date(nextDate).getMonth()]}` : day(nextDate) <= 365 ? `${monthNames[new Date(nextDate).getMonth()]}-${new Date(nextDate).getFullYear() - 2000}` : day(nextDate) > 365 ? new Date(nextDate).getFullYear() : \"---\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }; //year minused by 2000 to get last two digits of year, it is valid for limited time \n\n\n  return days(nextDate);\n}\nexport function nextLectureDay(value) {\n  return day(value) < 0 ? \"Past\" : day(value) === 0 ? /*#__PURE__*/_jsxDEV(CountDown, {\n    value: new Date(value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 58\n  }, this) : day(value) === 1 ? \"Tommorow\" : dayNamesCom[new Date(value).getDay()];\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"names":["React","dayNamesCom","monthNames","date","Date","now","dateFormat","getDate","getMonth","day","value","Math","floor","parse","CountDown","props","diff","String","padStart","count","setCount","useState","useEffect","setTimeout","nextLectureDate","targetArray","condition","nextDate","find","a","Time","undefined","days","getDay","getFullYear","nextLectureDay"],"sources":["D:/Ababeel/LMS FrontEnd/src/pages/components/countDown.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\n// const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\",];\r\nconst dayNamesCom = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\",];\r\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n// const monthNamesFull = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nconst date = Date.now();\r\n\r\nexport let dateFormat = (date) => { date = new Date(date); return `${date.getDate()}-${monthNames[date.getMonth(date)]}` }\r\nfunction day(value) { return (Math.floor((Date.parse(value) - date) / 86.4e+6)) }       // 86.4e+6 are milliseconds for 1 day. and returns upcoming date as object..\r\n\r\nfunction CountDown(props) {\r\n    const diff = props.value - +(new Date())\r\n    let value = () => {\r\n        if (diff > 0)\r\n            return [\r\n                String(Math.floor((diff / (1000 * 60 * 60)) % 24)).padStart(2, '0'),\r\n                String(Math.floor((diff / 1000 / 60) % 60)).padStart(2, '0'),\r\n                String(Math.floor((diff / 1000) % 60)).padStart(2, '0')\r\n            ]\r\n    }\r\n\r\n    const [count, setCount] = React.useState(value())\r\n    React.useEffect(() => { setTimeout(() => { setCount(value()); }, 1000); })\r\n\r\n    return `${count[0]}:${count[1]}:${count[2]} `;\r\n}\r\n\r\n\r\nexport function nextLectureDate(targetArray, condition) {\r\n\r\n    let nextDate = (condition === \"Assignments\") ? (targetArray.find((a) => { return (Date.parse(a[\"Last Date\"]) > date) })) : (targetArray.find((a) => { return (Date.parse(a.Date + ' ' + a.Time) > date) }));\r\n    nextDate = (nextDate===undefined ? \"-\" : ((condition === \"Assignments\") ? nextDate[\"Last Date\"] : (nextDate.Date + ' ' + nextDate.Time)));\r\n\r\n    const days = (nextDate) => {\r\n        return <i>{day(nextDate) === 0 ? <CountDown value={new Date(nextDate)} /> : ((day(nextDate) <= 7) ? (dayNamesCom[(new Date(nextDate)).getDay()]) : ((day(nextDate) <= 31) ? (`${(new Date(nextDate)).getDate()}-${monthNames[(new Date(nextDate)).getMonth()]}`) : (((day(nextDate) <= 365) ? (`${monthNames[(new Date(nextDate)).getMonth()]}-${(new Date(nextDate)).getFullYear() - 2000}`) : ((day(nextDate) > 365) ? (new Date(nextDate)).getFullYear() : \"---\")))))} </i>  } //year minused by 2000 to get last two digits of year, it is valid for limited time \r\n\r\n    return days(nextDate);\r\n}\r\n\r\n\r\nexport function nextLectureDay(value) {\r\n    return day(value) < 0 ? \"Past\" : (day(value) === 0 ? <CountDown value={new Date(value)} /> : (day(value) === 1 ? \"Tommorow\" : (dayNamesCom[(new Date(value)).getDay()])))\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}